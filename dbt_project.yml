

# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'syntegra_cclf_fhir_staging'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'syntegra_snowflake'

vars:
    source_database: tuva         # configuration required (name of the database where your data is stored)
    source_schema: cclf_20220815      # configuration required (name of the schema where you created staging tables)
    source_name: cclf_20220815       # configuration required (name of your source dataset e.g. cms_claims)

    beneficiary_demographics: "{{ source(var('source_name'),'beneficiary_demographics') }}"
    parta_claims_header: "{{ source(var('source_name'),'parta_claims_header') }}"
    parta_claims_revenue_center_detail: "{{ source(var('source_name'),'parta_claims_revenue_center_detail') }}"
    parta_diagnosis_code: "{{ source(var('source_name'),'parta_diagnosis_code') }}"
    parta_procedure_code: "{{ source(var('source_name'),'parta_procedure_code') }}"
    partb_physicians: "{{ source(var('source_name'),'partb_physicians') }}"
    partb_dme: "{{ source(var('source_name'),'partb_dme') }}"
# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  syntegra_cclf_fhir_staging:
    +schema: cclf_20220815_fhir

seeds:
  syntegra_cclf_fhir_staging:
    +schema: terminology
    saf_state_codes:
      +column_types:
        state_code: varchar(4)
    place_of_service:
      +column_types:
        place_of_service_code: varchar(4)
      

